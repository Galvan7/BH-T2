{"version":3,"sources":["Context/AuthReducer.js","Context/AuthContext.js","Pages/Signin.js","Pages/Signup.js","Components/Message.js","Components/AddAmigo.js","Components/ProfilePage.js","Components/SidebarChat.js","Components/EmptyChatRoom.js","Pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AuthReducer","state","action","type","user","payload","isLoading","error","INITIAL_STATE","JSON","parse","localStorage","getItem","isFetching","AuthContext","createContext","AuthContextProvider","_ref","children","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","useEffect","setItem","stringify","_jsx","Provider","value","Signin","_useState","useState","_useState2","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","setError","_useContext","useContext","loginCall","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userCredential","res","wrap","_context","prev","next","axios","post","API_URL","sent","data","t0","stop","_x","_x2","apply","arguments","className","_jsxs","onSubmit","e","preventDefault","htmlFor","placeholder","name","required","onChange","target","minLength","disabled","CircularProgress","color","href","Link","to","Signup","username","setUsername","_useState7","_useState8","photo","setPhoto","_useState9","_useState10","_useState11","_useState12","setIsLoading","history","useHistory","handleForm","config","headers","FormData","append","console","log","alert","push","accept","files","size","Message","message","own","text","format","createdAt","AddAmigo","addchattoggler","addchattoggle","amigousername","setAmigoUsername","userExists","setUserExists","handleSubmit","_ref2","response","get","concat","abrupt","senderId","_id","receiverId","window","location","reload","onClick","src","alt","ProfilePage","toggler","togglestate","updated_data","result","put","SidebarChat","chatroomtile","currentUser","setUser","online","setOnline","socket","useRef","current","io","amigoId","members","find","m","on","users","userId","getAmigodetails","EmptyChatRoom","Home","chatroomtiles","setChatroomtiles","currentchat","setCurrentchat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","amigo","setAmigo","_useState13","_useState14","open","setOpen","scrollRef","sender","Date","now","includes","_toConsumableArray","emit","getChatroomtiles","_callee2","_context2","_ref3","_callee3","_context3","getMessages","_scrollRef$current","scrollIntoView","behavior","_useState15","_useState16","pick","setPick","_ref4","_callee4","sendingMessage","_context4","chatroomId","member","_useState17","_useState18","addtoggle","setAddtoggle","addchatToggler","_useState19","_useState20","profiletoggle","setProfiletoggle","profiletoggler","IconButton","MenuIcon","style","fontSize","PersonAddIcon","CloseIcon","removeItem","ExitToAppIcon","SearchIcon","map","_Fragment","ref","Picker","onSelect","emoji","native","emojiSize","InsertEmoticonIcon","AttachFileIcon","SendIcon","App","Router","Switch","Route","exact","path","Redirect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56a1d763.chunk.js","sourcesContent":["const AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_START\":\r\n            return {\r\n                user: action.payload,\r\n                isLoading: true,\r\n                error: false\r\n            };\r\n        case \"LOGIN_SUCCESS\":\r\n            return {\r\n                user: action.payload,\r\n                isLoading: false,\r\n                error: false\r\n            };\r\n        case \"LOGIN_FAILURE\":\r\n            return {\r\n                user: null,\r\n                isLoading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer;","import { createContext, useEffect, useReducer } from \"react\"\r\nimport AuthReducer from \"./AuthReducer\"\r\n\r\nconst INITIAL_STATE = {\r\n    user:JSON.parse(localStorage.getItem(\"user\")) || null,\r\n    isFetching:false,\r\n    error:false\r\n}\r\n\r\n/* Reads the data from the Provider and changes INITIAL_STATE */\r\nexport const AuthContext = createContext(INITIAL_STATE)\r\n\r\n/* Children here are the Components that need to get the data.[In this Application we specified App COmponent as Child in index.js so that we can server every every component exist in the app */\r\n/* This will provide data to all the children that we are giving here */\r\nexport const AuthContextProvider = ({children}) =>{\r\n    const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"user\", JSON.stringify(state.user))\r\n      },[state.user])\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n        value={{\r\n            user:state.user,\r\n            isFetching:state.isFetching,\r\n            error:state.error,\r\n            dispatch\r\n        }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport './Signin-up.css'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { AuthContext } from '../Context/AuthContext'\r\n\r\nfunction Signin() {\r\n\r\n    const [email, setEmail] = useState()   /* Instead of Using useState hook we can use useRef and keep ref in the required input field for getting data */\r\n    const [password, setPassword] = useState()\r\n    const [error,setError] = useState(\"\")\r\n    const { isFetching, dispatch } = useContext(AuthContext)\r\n\r\n    const API_URL = \"https://buzzhive.onrender.com\"\r\n\r\n    const loginCall = async (userCredential, dispatch) => {\r\n        dispatch({ type: \"LOGIN_START\" });\r\n        try {\r\n            const res = await axios.post(API_URL+\"/api/auth/signin\", userCredential);\r\n            dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\r\n        }\r\n        catch (err) {\r\n            dispatch({ type: \"LOGIN_FAILURE\", payload: err })\r\n            setError(\"Wrong Password Or Username\")\r\n        }\r\n    }\r\n\r\n    const handleForm = (e) => {\r\n        e.preventDefault()\r\n        loginCall({ email, password }, dispatch)\r\n    }\r\n\r\n    return (\r\n        <div className='signin-container'>\r\n            <div className=\"signin-card\">\r\n                <form onSubmit={handleForm}>\r\n                    <h2 className=\"signin-title\"> Log in</h2>\r\n                    <p className=\"line\"></p>\r\n                    <div className=\"error-message\"><p>{error}</p></div>\r\n                    <div className=\"signin-fields\">\r\n                        <label htmlFor=\"email\"> <b>Email</b></label>\r\n                        <input className='signin-textbox' type=\"email\" placeholder=\"Enter Email\" name=\"username\" required onChange={(e) => { setEmail(e.target.value) }} />\r\n                        <label htmlFor=\"password\"><b>Password</b></label>\r\n                        <input className='signin-textbox' type=\"password\" minLength='6' placeholder=\"Enter Password\" name=\"psw\" required onChange={(e) => { setPassword(e.target.value) }} />\r\n                    </div>\r\n                    <button className=\"signin-button\" disabled={isFetching}>{isFetching ? <CircularProgress color=\"#ffffff\" /> : \"Log In\"}</button>\r\n                    <br></br><a className=\"forget-pass\" href=\"/signup\">Forgot password?</a>\r\n                </form>\r\n                <div className='signup-option'>\r\n                    <p className=\"signup-question\">Don't have an account? <Link to='/signup'>Sign Up</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Signin-up.css\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nfunction Signup() {\r\n\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const [error,setError] = useState(\"\");\r\n  const [isLoading,setIsLoading] = useState(false)\r\n  const history = useHistory();\r\n\r\n  const API_URL = \"https://buzzhive.onrender.com\"\r\n\r\n  const handleForm = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true)\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const data = new FormData();\r\n    data.append(\"username\", username);\r\n    data.append(\"email\", email);\r\n    data.append(\"password\", password);\r\n\r\n    if (photo !== \"\") {\r\n      data.append(\"photo\", photo);\r\n    }\r\n\r\n    try {\r\n      console.log(API_URL+\"/api/auth/signup\", data, config)\r\n      await axios.post(API_URL+\"/api/auth/signup\", data, config);\r\n      alert(\"Registration successful, login now\");\r\n      history.push(\"/signin\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(\"Username/Email Already Exists\")\r\n    }\r\n    setIsLoading(false)\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <div className=\"signup-card\">\r\n        <form onSubmit={handleForm}>\r\n          <h2 className=\"signup-title\"> Register</h2>\r\n          <p className=\"line\"></p>\r\n          <div className=\"error-message\"><p>{error}</p></div>\r\n          <div className=\"signup-fields\">\r\n            <label htmlFor=\"username\"> {\" \"} <b>Username</b></label>\r\n            <input className=\"signup-textbox\" type=\"text\" placeholder=\"Enter Username\" name=\"username\" required onChange={(e) => { setUsername(e.target.value); }} />\r\n            <label htmlFor=\"email\">{\" \"}<b>Email</b></label>\r\n            <input className=\"signup-textbox\" type=\"email\" placeholder=\"Enter Email\" name=\"email\" required onChange={(e) => { setEmail(e.target.value); }} />\r\n            <label htmlFor=\"password\"> <b>Password</b></label>\r\n            <input className=\"signup-textbox\" type=\"password\" placeholder=\"Enter Password\" minLength=\"6\" name=\"psw\" required onChange={(e) => { setPassword(e.target.value); }} />\r\n            <label><b>Image(You can add Image later)</b></label>\r\n            <input className=\"file-input\" type=\"file\" accept=\".png, .jpg, .jpeg, .gif\" name=\"photo\" onChange={(e) => { setPhoto(e.target.files[0]); }} />\r\n          </div>\r\n          <button className=\"signup-button\" disabled={isLoading}>{isLoading ?<CircularProgress color=\"#ffffff\" size=\"18px\"/> : \"Sign Up\"}</button>\r\n        </form>\r\n        <div className=\"signup-option\">\r\n          <p className=\"signup-question\">\r\n            Have an account? <Link to=\"/signin\">Sign In</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from 'react'\r\nimport './Message.css'\r\nimport { format } from \"timeago.js\"\r\n\r\nfunction Message({message,own}) {\r\n    return (\r\n        <div>\r\n            <p className={own?'message-sent':'message-received'}>\r\n                <span>{message.text}</span>\r\n                <span className='message-time'>{format(message.createdAt)}</span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios';\r\nimport React, { useContext, useState } from 'react'\r\nimport { AuthContext } from '../Context/AuthContext';\r\nimport './AddAmigo.css'\r\n\r\nfunction AddAmigo({addchattoggler,addchattoggle}) {\r\n\r\n    const [amigousername, setAmigoUsername] = useState()\r\n    const [userExists, setUserExists] = useState(true);\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const API_URL = \"https://buzzhive.onrender.com/\"\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const response = await axios.get(`${API_URL}api/users/?username=${amigousername}`)\r\n            if (!response.data) {\r\n                setUserExists(false);\r\n                return;\r\n            }\r\n            setAmigoUsername(\"\")\r\n            const data = {\r\n                senderId: user._id,\r\n                receiverId: response.data._id\r\n            }\r\n            await axios.post(API_URL+'api/chatrooms', data)\r\n        }\r\n        catch (err) {\r\n        }\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className='add-amigo-background'>\r\n            <div className={addchattoggle?\"add-amigo-open\":\"add-amigo-close\"}>\r\n                <div className=\"close-div\" ><span onClick={addchattoggler}><p className=\"close-symbol\">x</p></span></div>\r\n                <form>\r\n                    <img className='add-amigo-img' src='assets/add-group.png' alt=''></img>\r\n                    <input type=\"text\" placeholder=\"Username to add to Hive\" value={amigousername} onChange={(e) => { setAmigoUsername(e.target.value) }} required />\r\n                    <button onClick={handleSubmit}>ADD CHAT</button>\r\n                    {!userExists && <p>User does not exist.</p>}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAmigo;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./ProfilePage.css\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nfunction ProfilePage({ toggler, togglestate }) {\r\n\r\n  const { user } = useContext(AuthContext);\r\n  const [username, setUsername] = useState(user.username)\r\n  const [photo, setPhoto] = useState(\"\")\r\n  const [error, setError] = useState(\"\")\r\n\r\n  const API_URL = \"https://buzzhive.onrender.com/\"\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    const updated_data = new FormData();\r\n    updated_data.append(\"username\", username);\r\n    if (photo !== \"\") {\r\n      updated_data.append(\"photo\", photo);\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(`${API_URL}api/users/?username=${username}`);\r\n      if (response.data && response.data._id !== user._id) {\r\n        setError(\"Username is already taken\");\r\n        return;\r\n      }\r\n      await axios.put(API_URL + 'api/users/' + user._id, updated_data, config)\r\n      const result = await axios.get(API_URL+\"api/users/\"+user._id)\r\n      const data = JSON.stringify(result.data)\r\n      localStorage.setItem(\"user\",data)\r\n      setError(\"\")\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n      setError(\"An error occurred. Please try again later.\");\r\n    }\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className={togglestate ? \"profile-card-open\" : \"profile-card-close\"}>\r\n        <div className=\"close-div\">\r\n          <span onClick={toggler}>\r\n            <p className=\"close-symbol\">x</p>\r\n          </span>\r\n        </div>\r\n        <img className=\"profile-image\" src={user?.photo ? API_URL+\"photo/\" + user?.photo : \"assets/noavatar.jpg\"} alt=\"\"></img>\r\n        <form>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input type=\"text\" className=\"username-input\" value={username} onChange={(e) => { setUsername(e.target.value) }} required></input>\r\n          <input\r\n            className=\"update-profilepic\"\r\n            type=\"file\"\r\n            accept=\".png, .jpg, .jpeg, .gif\"\r\n            name=\"photo\"\r\n            onChange={(e) => {\r\n              setPhoto(e.target.files[0]);\r\n            }}\r\n          />\r\n          <button onClick={handleSubmit}>UPDATE</button>\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport './SidebarChat.css'\r\nimport axios from 'axios'\r\nimport { io } from \"socket.io-client\"\r\n\r\nfunction SidebarChat({ chatroomtile, currentUser }) {\r\n\r\n    const [user, setUser] = useState(null)\r\n    const [online, setOnline] = useState(false);\r\n    const socket = useRef()\r\n\r\n    const API_URL = \"https://buzzhive.onrender.com/\"\r\n\r\n    useEffect(() => {\r\n        socket.current = io(API_URL);\r\n    }, [API_URL])\r\n\r\n    useEffect(() => {\r\n        const amigoId = chatroomtile.members.find((m) => m !== currentUser._id);\r\n        socket.current.on(\"getUsers\", (users) => {\r\n            setOnline(users.find((user) => user.userId === amigoId));\r\n        })\r\n        const getAmigodetails = async () => {\r\n            try {\r\n                const response = await axios.get(API_URL + 'api/users/' + amigoId)\r\n                setUser(response.data)\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        getAmigodetails()\r\n    }, [currentUser, chatroomtile, online, API_URL])\r\n\r\n    return (\r\n        <div className='sidebarchat'>\r\n            <img className='amigo-profilepic' src={user?.photo ? API_URL + \"photo/\" + user?.photo : \"assets/chatbot.png\"} alt='' />\r\n            <div className={online ? \"online\" : \"offile\"}></div>\r\n            <p className=\"sidebarchat-info-name\">{user != null ? user.username : \"\"}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat","import React from \"react\";\r\nimport \"./EmptyChatRoom.css\";\r\n\r\nfunction EmptyChatRoom() {\r\n  return (\r\n    <div>\r\n      <div className=\"EmptyChatroom\">\r\n        <img className=\"emptychatroom-img\"\r\n          src=\"assets/home.png\"\r\n          alt=\"\"\r\n        ></img>\r\n        <p className=\"empty-chatroom-mainhead\">Connect to Your Hive Now!</p>\r\n        <p className=\"empty-chatroom-subhead\">\r\n          Select a User from the Sidebar and Start conversation or Add a User using\r\n          username from the option in the top right corner of the page.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyChatRoom;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport \"./HomeCSS/Home.css\";\r\nimport \"./HomeCSS/Sidebar.css\";\r\nimport \"./HomeCSS/ChatRoom.css\";\r\nimport Message from \"../Components/Message.js\";\r\nimport AddAmigo from \"../Components/AddAmigo.js\";\r\nimport ProfilePage from \"../Components/ProfilePage\";\r\nimport SidebarChat from \"../Components/SidebarChat.js\";\r\nimport EmptyChatRoom from \"../Components/EmptyChatRoom\";\r\nimport { AuthContext } from \"../Context/AuthContext\";\r\n\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\n\r\nfunction Home() {\r\n  const [chatroomtiles, setChatroomtiles] = useState([]);\r\n  const [currentchat, setCurrentchat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [amigo, setAmigo] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const { user } = useContext(AuthContext);\r\n  const scrollRef = useRef();\r\n  const socket = useRef();\r\n\r\n  const API_URL = \"https://buzzhive.onrender.com/\"\r\n\r\n  /* Making Messages Realtime */\r\n\r\n  useEffect(() => {\r\n    socket.current = io(API_URL);\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, [API_URL]);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentchat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentchat]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"addUser\", user?._id);\r\n  }, [user, chatroomtiles, currentchat, socket]);\r\n\r\n  /* Fetching the Chat Tiles */\r\n\r\n  useEffect(() => {\r\n    const getChatroomtiles = async () => {\r\n      try {\r\n        const res = await axios.get(API_URL + \"api/chatrooms/\" + user._id);\r\n        setChatroomtiles(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getChatroomtiles();\r\n  }, [user?._id, API_URL]);\r\n\r\n  /* Fetching the Chat Tile user details */\r\n\r\n  useEffect(() => {\r\n    const amigoId = currentchat?.members.find((m) => m !== user._id);\r\n    const getAmigodetails = async () => {\r\n      try {\r\n        const response = await axios.get(API_URL + \"api/users/\" + amigoId);\r\n        setAmigo(response.data);\r\n      } catch (err) { }\r\n    };\r\n    getAmigodetails();\r\n  }, [user, currentchat, API_URL]);\r\n\r\n  /* Fetching ChatRoom Messages */\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        const response = await axios.get(API_URL + \"api/messages/\" + currentchat?._id);\r\n        setMessages(response.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentchat, API_URL]);\r\n\r\n  /* Scroll to the recent message */\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  /* Emoji Picker */\r\n\r\n  const addEmoji = (e) => {\r\n    let emoji = e.native;\r\n    setNewMessage(newMessage + emoji);\r\n  };\r\n  const [pick, setPick] = useState(false);\r\n  const openPicker = () => {\r\n    setPick(!pick);\r\n  };\r\n\r\n  /* Posting a Message */\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const sendingMessage = {\r\n      chatroomId: currentchat._id,\r\n      senderId: user._id,\r\n      text: newMessage,\r\n    };\r\n\r\n    const receiverId = currentchat.members.find(\r\n      (member) => member !== user._id\r\n    );\r\n\r\n    socket.current.emit(\"sendMessage\", {\r\n      senderId: user._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post(API_URL + \"api/messages/\", sendingMessage);\r\n      setMessages([...messages, response.data]);\r\n      setNewMessage(\"\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setPick(false)\r\n  };\r\n\r\n  /* Logout */\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    window.location.reload();\r\n  };\r\n\r\n  /* AddChat Toggle Setup */\r\n\r\n  const [addtoggle, setAddtoggle] = useState(false);\r\n  const addchatToggler = () => {\r\n    addtoggle === false ? setAddtoggle(true) : setAddtoggle(false);\r\n    console.log(addtoggle);\r\n  };\r\n\r\n  /* Profile Page Toggle Setup */\r\n\r\n  const [profiletoggle, setProfiletoggle] = useState(false);\r\n  const profiletoggler = () => {\r\n    profiletoggle === false ? setProfiletoggle(true) : setProfiletoggle(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {/* Chat Adding Card */}\r\n      <AddAmigo addchattoggler={() => { addchatToggler(); }} addchattoggle={addtoggle} />\r\n\r\n      {/* Profile Page Card - Update */}\r\n      <ProfilePage toggler={() => { profiletoggler(); }} togglestate={profiletoggle} />\r\n\r\n      {/* Sidebar Open Menu */}\r\n      {open\r\n        ? \"\"\r\n        : <div className=\"menu-open\" onClick={() => { setOpen(true); }} >\r\n          <IconButton>\r\n            <MenuIcon style={{ fontSize: 35, color: \"#316af3\" }} />\r\n          </IconButton>\r\n        </div>\r\n      }\r\n\r\n      {/* Add Chat Icon */}\r\n      <div className=\"add-chatroom-icon\" onClick={addchatToggler}>\r\n        <IconButton>\r\n          <PersonAddIcon />\r\n        </IconButton>\r\n      </div>\r\n\r\n      {/* Sidebar, ChatRoom */}\r\n      <div className=\"home-components\">\r\n\r\n        {/* Sidebar */}\r\n        <div className={open ? \"sidebar active\" : \"sidebar\"}>\r\n          <div className=\"sidebar-header\">\r\n            <div className=\"menu-close\" onClick={() => { setOpen(false); }} >\r\n              <IconButton>\r\n                <CloseIcon style={{ fontSize: 35, color: \"white\" }} />\r\n              </IconButton>\r\n            </div>\r\n            <IconButton onClick={() => { profiletoggler(); }} >\r\n              <img className=\"user-profile-image\" src={user?.photo ? API_URL + \"photo/\" + user?.photo : \"assets/noavatar.jpg\"} alt='' />\r\n            </IconButton>\r\n            <div className=\"logout-option\">\r\n              <h2>BUZZHIVE</h2>\r\n              <IconButton onClick={logout}>\r\n                <ExitToAppIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"sidebar-search\">\r\n            <div className=\"sidebar-search-container\">\r\n              <SearchIcon className=\"sidebar-searchicon\" />\r\n              <input type=\"text\" name=\"chat-search\" placeholder=\"Search a Chat\" />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Chatroom tiles */}\r\n\r\n          <div className=\"sidebar-chatoptions\">\r\n            {chatroomtiles.map((chatroomtile) => (\r\n              <div\r\n                key={chatroomtile?._id}\r\n                onClick={() => { setCurrentchat(chatroomtile); setOpen(false) }} >\r\n                <SidebarChat chatroomtile={chatroomtile} currentUser={user} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Chatroom */}\r\n        <div className=\"chatroom\">\r\n          {currentchat ? (\r\n            <>\r\n              <div className=\"chatroom-header\">\r\n                <div className=\"chatroom-chatinfo\">\r\n                  <img className='amigo-profilepic' src={amigo?.photo ? API_URL + \"photo/\" + amigo?.photo : \"assets/chatbot.png\"} alt='' />\r\n\r\n                  <div className=\"chatroom-chatinfo-right\">\r\n                    <div className=\"chatroom-chatinfo-name\">\r\n                      <p>{amigo?.username}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"chatroom-messages-container\" onClick={() => { setPick(false) }}>\r\n                {messages.map((message) => (\r\n                  <div key={message?._id} ref={scrollRef}>\r\n                    <Message message={message} own={message?.senderId === user._id} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className={pick ? \"emoji-picker-open\" : \"emoji-picker-close\"} >\r\n                <Picker onSelect={addEmoji} emojiSize={25} />\r\n              </div>\r\n              <div className=\"chatroom-footer\">\r\n                <div className=\"chatroom-footer-lefticons\">\r\n                  <IconButton onClick={openPicker}>\r\n                    <InsertEmoticonIcon />\r\n                  </IconButton>\r\n                  <IconButton>\r\n                    <AttachFileIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <form>\r\n                  <input className=\"message-input\" type=\"text\" name=\"message-input\" placeholder=\"Type a message\" onChange={(e) => { setNewMessage(e.target.value); }} value={newMessage} required />\r\n                  <button className=\"input-button\" onClick={newMessage ? handleSubmit : null} > Send a Message </button>\r\n                </form>\r\n                <div className=\"chatroom-footer-righticon\" onClick={newMessage ? handleSubmit : null} >\r\n                  <IconButton>\r\n                    <SendIcon className=\"send-icon\" />\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <EmptyChatRoom />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import Signin from \"./Pages/Signin.js\"\r\nimport Signup from \"./Pages/Signup.js\"\r\nimport Home from \"./Pages/Home.js\"\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\r\nimport { useContext } from \"react\"\r\nimport { AuthContext } from \"./Context/AuthContext.js\"\r\n\r\nfunction App() {\r\n  \r\n  const { user } = useContext(AuthContext)\r\n  \r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            {user ? <Home /> : <Signin />}\r\n          </Route>\r\n          <Route exact path='/signin'>\r\n            {user ? <Redirect to='/' /> : <Signin />}\r\n          </Route>\r\n          <Route exact path='/signup'>\r\n            {user ? <Redirect to='/' /> : <Signup/>}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthContextProvider} from \"./Context/AuthContext\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthContextProvider>\r\n      <App />\r\n    </AuthContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}